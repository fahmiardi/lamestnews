{% macro render_news(news) %}
    {% if news.del is not defined or news.del == false %}
        <article data-news-id="{{ news.id }}">
            <a href="#up" class="{{ _self.vote_class(news, 'up') }}">&#9650;</a>
            {% set is_editable = news_editable(app.user, news, app.lamest.getOption('news_edit_time')) %}

            {% if news_domain(news) %}
                <h2><a href="{{ news.url }}">{{ news.title }}</a></h2>
                <address>
                    at {{ news_domain(news) }}
                    {% if is_editable %}<a href="/editnews/{{ news.id }}">[edit]</a>{% endif %}
                </address>
            {% else %}
                <h2><a href="/news/{{ news.id }}">{{ news.title }}</a></h2>
                <address>{% if is_editable %}<a href="/editnews/{{ news.id }}">[edit]</a>{% endif %}</address>
            {% endif %}

            <a href="#down" class="{{ _self.vote_class(news, 'down') }}">&#9660;</a>
            <p>
                {{ news.up }} up and {{ news.down }} down,
                posted by <span class="username"><a href="/user/{{ news.username }}">{{ news.username }}</a></span>
                {{ time_elapsed(news.ctime) }} <a href="/news/{{ news.id }}">{{ news.comments }} comments</a>
            </p>
        </article>
    {% else %}
        <article class="deleted">[deleted news]</article>
    {% endif %}
{% endmacro %}

{% macro vote_class(news, type) %}
{% spaceless %}
    {% set typearrow = type ~ 'arrow ' %}
    {% if news.voted is defined and news.voted %}
        {{ typearrow ~ (news.voted == type ? 'voted' : 'disabled') }}
    {% else %}
        {{ typearrow }}
    {% endif %}
{% endspaceless %}
{% endmacro %}

{% macro render_comments(tree, parent_id, level) %}
    {% for comment in sort_comments(tree[parent_id]) %}
        {% set parents = tree[comment.id] is defined ? tree[comment.id] : null %}
        {{ _self.render_comment(comment, level, parents) }}
        {% if parents %}
            {{ _self.render_comments(tree, comment.id, level + 1) }}
        {% endif %}
    {% endfor %}
{% endmacro %}

{% macro render_comment(comment, level, parents) %}
    {% set user = comment.user %}
    {% set news_id = comment.thread_id %}
    {% set css_indentation = level * app.lamest.getOption('comment_reply_shift') %}
    {% set edit_time_left = ((app.lamest.getOption('comment_edit_time') - (now() - comment.ctime)) / 60) | to_int %}

    {% if comment.del is not defined or comment.del == false and parents %}
        {% set comment_id = news_id ~ '-' ~ comment.id %}
        <article class="comment" style="margin-left:{{ css_indentation }}px" data-comment-id="{{ comment_id }}" id="{{ comment_id }}">
            <span class="avatar"><img src="{{ gravatar(user.email) }}"></span>
            <span class="info">
                <span class="username"><a href="/user/{{ user.username }}">{{ user.username }}</a></span>
                {{ time_elapsed(comment.ctime) }}.
                <a href="/comment/{{ news_id }}/{{ comment.id }}" class="reply">link</a>
                {% if app.user and comment.topcomment is not defined %}
                    <a href="/reply/{{ news_id }}/{{ comment.id }}" class="reply">reply</a>
                {% endif %}
                {{ comment_score(comment) }} points
                <a href="#up" class="{{ _self.vote_class(comment, 'up') }}">&#9650;</a>
                <a href="#down" class="{{ _self.vote_class(comment, 'down') }}">&#9660;</a>
                {% if app.user and app.user.id == comment.user_id and edit_time_left > 0 %}
                    <a href="/editcomment/{{ news_id }}/{{ comment.id }}" class="reply">edit</a>
                    ({{ edit_time_left }} minutes left)
                {% endif %}
            </span>
            <pre>{{ comment.body | commentize }}</pre>
        </article>
    {% else %}
        <article class="comment deleted" style="margin-left:{{ css_indentation }}px">[comment deleted]</article>
    {% endif %}
{% endmacro %}
